label {
    z-index: 1;
    border: none;
    background-color: var(--red);
    box-shadow: 0px 5px 15px 3px rgb(0 0 0 / 15%);
    color: var(--white);
    padding: 0.8em 1.5em;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s, color 0.3s, opacity 0.3s;
    font-family: sans-serif;
    border-radius: 0.2rem;
    display: block;
    z-index: 1;
    opacity: 1;
    position: relative;
}

input[type='checkbox']:hover,
label:hover {
    opacity: 0.7;
}

/* -------------------- Inputs styling -------------------- */
input[type='radio'] {
    position: absolute;
    opacity: 0;
    width: 0;
    visibility: hidden;
}

input[type='checkbox'] {
    margin: 1rem;
    position: relative;
    display: block;
    width: 3rem;
    aspect-ratio: 1;
    appearance: none;
    -webkit-appearance: none;
    cursor: pointer;
    text-align: center;
    border-radius: 5px;
    background-color: var(--red);
    transition: background-color 0.5s, opacity 0.2s;
}

input[type='checkbox']::after {
    content: '';
    background-size: 60%;
    background-repeat: no-repeat;
    background-position: center;
    width: 100%;
    aspect-ratio: 1;
    position: absolute;
    inset: 0;
    transition: filter 0.5s;
}

input[type='checkbox']:checked ~ p,
input[type='checkbox']:checked ~ menu {
    transform: translateX(0);
    opacity: 1;
}

/* -------------------- Inputs left menu -------------------- */
input[name='rotate-menu']::after {
    background-image: url(../../img/rotate.svg);
    background-size: 50%;
}

input[name='rotate-menu'] ~ p,
input[name='rotate-menu'] ~ menu {
    transform: translateX(-20rem);
    opacity: 0;
}

/* -------------------- Inputs right menu -------------------- */
input[name='camera-menu'] {
    margin-left: auto;
}

input[name='camera-menu']::after {
    background-image: url(../../img/camera.svg);
}

input[name='camera-menu'] ~ p,
input[name='camera-menu'] ~ menu {
    transform: translateX(20rem);
    opacity: 0;
}

/* -------------------- Psycho button -------------------- */
label[for='switch-psycho'] {
    --ring-size: 0.75rem;
    background-image: repeating-radial-gradient(
        closest-side circle,
        transparent calc(100% - var(--ring-size) * 2),
        var(--black) calc(100% - var(--ring-size))
    );
    background-position: center center;
    animation: grow 4s linear infinite, rainbow 20s linear infinite;
    color: var(--white);
}

/* -------------------- Active states labels -------------------- */

input[type='checkbox']:checked,
input:nth-of-type(1):checked ~ nav label[for='side-1'],
input:nth-of-type(2):checked ~ nav label[for='side-2'],
input:nth-of-type(3):checked ~ nav label[for='side-3'],
input:nth-of-type(4):checked ~ nav label[for='side-4'],
input:nth-of-type(5):checked ~ nav label[for='camera-top'],
input:nth-of-type(6):checked ~ nav label[for='camera-bottom'],
input:nth-of-type(7):checked ~ nav label[for='switch-normal'],
input:nth-of-type(9):checked ~ nav label[for='rotate-top-left'],
input:nth-of-type(10):checked ~ nav label[for='rotate-top-none'],
input:nth-of-type(11):checked ~ nav label[for='rotate-top-right'],
input:nth-of-type(12):checked ~ nav label[for='rotate-middle-left'],
input:nth-of-type(13):checked ~ nav label[for='rotate-middle-none'],
input:nth-of-type(14):checked ~ nav label[for='rotate-middle-right'],
input:nth-of-type(15):checked ~ nav label[for='rotate-bottom-left'],
input:nth-of-type(16):checked ~ nav label[for='rotate-bottom-none'],
input:nth-of-type(17):checked ~ nav label[for='rotate-bottom-right'] {
    background-color: var(--white);
    color: var(--black);
}

input[type='checkbox']:checked:after,
input:nth-of-type(9):checked
    ~ nav
    label[for='rotate-top-left']::after,
input:nth-of-type(11):checked
    ~ nav
    label[for='rotate-top-right']::after,
input:nth-of-type(12):checked
    ~ nav
    label[for='rotate-middle-left']::after,
input:nth-of-type(14):checked
    ~ nav
    label[for='rotate-middle-right']::after,
input:nth-of-type(15):checked
    ~ nav
    label[for='rotate-bottom-left']::after,
input:nth-of-type(17):checked
    ~ nav
    label[for='rotate-bottom-right']::after {
    filter: invert(100%);
}
