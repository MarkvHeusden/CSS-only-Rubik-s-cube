/* -------------------- Rotations top -------------------- */

/* left */
input:nth-of-type(9):checked ~ main ul:nth-child(3n + 14),
input:nth-of-type(9):checked ~ main ul:nth-child(-3n + 12) {
    --rotate-x: -90deg;
}

/* right */
input:nth-of-type(11):checked ~ main ul:nth-child(3n + 14),
input:nth-of-type(11):checked ~ main ul:nth-child(-3n + 12) {
    --rotate-x: 90deg;
}

/* -------------------- Rotations middle -------------------- */

/* left */
input:nth-of-type(12):checked ~ main ul:nth-child(3n + 16),
input:nth-of-type(12):checked ~ main ul:nth-child(-3n + 11) {
    --rotate-x: -90deg;
}

/* right */
input:nth-of-type(14):checked ~ main ul:nth-child(3n + 16),
input:nth-of-type(14):checked ~ main ul:nth-child(-3n + 11) {
    --rotate-x: 90deg;
}

/* -------------------- Rotations bottom -------------------- */

/* left */
input:nth-of-type(15):checked ~ main ul:nth-child(-3n + 13),
input:nth-of-type(15):checked ~ main ul:nth-child(3n + 15) {
    --rotate-x: -90deg;
}

/* right */
input:nth-of-type(17):checked ~ main ul:nth-child(-3n + 13),
input:nth-of-type(17):checked ~ main ul:nth-child(3n + 15) {
    --rotate-x: 90deg;
}

/* -------------------- Camera angles -------------------- */
input:nth-of-type(1):checked ~ main section {
    --rotate-cam-x: 45deg;
}
input:nth-of-type(2):checked ~ main section {
    --rotate-cam-x: 135deg;
}
input:nth-of-type(3):checked ~ main section {
    --rotate-cam-x: 225deg;
}
input:nth-of-type(4):checked ~ main section {
    --rotate-cam-x: 315deg;
}

input:nth-of-type(5):checked ~ main section {
    --rotate-cam-y: -30deg;
}

input:nth-of-type(6):checked ~ main section {
    --rotate-cam-y: 30deg;
}

/* Rotate cubes inside buttons if top or bottom is selected */
input:nth-of-type(5):checked ~ nav:first-of-type ul {
    --rotate-x: -20deg;
}
input:nth-of-type(6):checked ~ nav:first-of-type ul {
    --rotate-x: 20deg;
}

/* -------------------- Psycho mode -------------------- */

/* Background */
input:nth-of-type(8):checked ~ div {
    --ring-size: 0.75rem;

    display: block;
    position: absolute;
    inset: 0;
    background-image: repeating-radial-gradient(
        closest-side circle,
        transparent calc(100% - var(--ring-size) * 2),
        var(--black) calc(100% - var(--ring-size))
    );
    background-position: center center;
    width: 100vw;
    height: 100vh;
    animation: grow 1.2s linear infinite, rainbow 20s linear infinite;
}

/* Warp cube */
input:nth-of-type(8):checked ~ main {
    animation: warp 20s linear infinite;
}

/* Animate cube blocks */
input:nth-of-type(8):checked ~ main ul li {
    --ring-size: 0.4rem;
    background-image: repeating-radial-gradient(
        closest-side circle,
        #0000002d calc(100% - var(--ring-size) * 2),
        var(--black) calc(100% - var(--ring-size))
    );
    animation-name: rainbow, grow;
    animation-duration: 10s, 2s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-direction: reverse, normal;
}

/* Animate small button cubes */
input:nth-of-type(8):checked
    ~ nav:first-of-type
    ol:first-of-type
    label
    li {
    background-image: radial-gradient(
        transparent calc(var(--mini-cube-size) / 1.7),
        var(--black) calc(var(--mini-cube-size) / 1.7)
    );
    animation-name: rainbow;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-direction: reverse, normal;
}

/* Animate psycho button */
input:nth-of-type(8):checked ~ nav label[for='switch-psycho'] {
    text-shadow: 0 0 5px rgb(0 0 0 / 65%);
    animation-play-state: paused, running;
}

@keyframes grow {
    0% {
        background-size: 100% 100%;
    }
    100% {
        background-size: calc(100% + var(--ring-size) * 4)
            calc(100% + var(--ring-size) * 4);
    }
}

@keyframes warp {
    100%,
    0% {
        transform: rotateX(30deg) rotateY(0deg) rotateZ(-90deg);
    }
    25% {
        transform: rotateX(0deg) rotateY(10deg) rotateZ(-90deg);
    }
    50% {
        transform: rotateX(30deg) rotateY(0deg) rotateZ(-90deg);
    }
    75% {
        transform: rotateX(0deg) rotateY(-10deg) rotateZ(-90deg);
    }
}

@keyframes rainbow {
    100%,
    0% {
        background-color: #ff0000;
    }
    8% {
        background-color: #ff7f00;
    }
    16% {
        background-color: #ffff00;
    }
    25% {
        background-color: #7fff00;
    }
    33% {
        background-color: #00ff00;
    }
    41% {
        background-color: #00ff7f;
    }
    50% {
        background-color: #00ffff;
    }
    58% {
        background-color: #007fff;
    }
    66% {
        background-color: #0000ff;
    }
    75% {
        background-color: #7f00ff;
    }
    83% {
        background-color: #ff00ff;
    }
    91% {
        background-color: #ff007f;
    }
}
