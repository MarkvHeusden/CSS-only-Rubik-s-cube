/* -------------------- Menu toggle -------------------- */
input[name='toggle-menu'] {
    position: relative;
    display: block;
    margin-left: auto;
    width: 3rem;
    height: 3rem;
    appearance: none;
    cursor: pointer;
    text-align: center;
    border-radius: 5px;
    background-color: var(--red);
    transition: background-color 0.5s, opacity 0.2s;
}

input[name='toggle-menu']::after {
    content: '';
    background-image: url(../img/camera-white.svg);
    background-size: 60%;
    background-repeat: no-repeat;
    background-position: center;
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    transition: background-image 0.5s;
}
input[name='toggle-menu']:hover {
    opacity: 0.8;
}

input[name='toggle-menu']:checked {
    background-color: var(--white);
}

input[name='toggle-menu']:checked:after {
    background-image: url(../img/camera-black.svg);
}

input[name='toggle-menu']:not(:checked) ~ p,
input[name='toggle-menu']:not(:checked) ~ ol {
    transform: translateX(17rem);
}

/* -------------------- Camera menu -------------------- */

input[type='radio'] {
    position: absolute;
    opacity: 0;
    width: 0;
}

nav {
    width: 18rem;
    position: absolute;
    inset: 1rem 1rem auto auto;
    z-index: 1;
    padding: 2rem;
}

nav ol {
    list-style-type: none;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
    gap: 0.5rem;
    transition: transform 0.5s;
}

ol li {
    display: inline;
}

label {
    z-index: 1;
    border: none;
    background-color: var(--red);
    color: var(--white);
    padding: 0.8em 1.5em;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.3s, color 0.3s;
    font-family: sans-serif;
    border-radius: 0.2rem;
    display: block;
}

p {
    margin: 1.5em 0 0.5em;
    font-weight: bold;
    transition: transform 0.5s;
}

/* -------------------- Active & hover states labels -------------------- */

label:hover,
input:nth-of-type(1):checked ~ nav label[for='side-1'],
input:nth-of-type(2):checked ~ nav label[for='side-2'],
input:nth-of-type(3):checked ~ nav label[for='side-3'],
input:nth-of-type(4):checked ~ nav label[for='side-4'],
input:nth-of-type(5):checked ~ nav label[for='camera-top'],
input:nth-of-type(6):checked ~ nav label[for='camera-bottom'],
input:nth-of-type(7):checked ~ nav label[for='switch-normal'],
input:nth-of-type(8):checked ~ nav label[for='switch-psycho'] {
    background-color: var(--white);
    color: var(--black);
}

/* -------------------- Camera angles top -------------------- */

input:nth-of-type(1):checked
    ~ input:nth-of-type(5):checked
    ~ main
    section {
    transform: rotateY(-30deg) rotateX(45deg);
}

input:nth-of-type(2):checked
    ~ input:nth-of-type(5):checked
    ~ main
    section {
    transform: rotateY(-30deg) rotateX(135deg);
}

input:nth-of-type(3):checked
    ~ input:nth-of-type(5):checked
    ~ main
    section {
    transform: rotateY(-30deg) rotateX(225deg);
}

input:nth-of-type(4):checked
    ~ input:nth-of-type(5):checked
    ~ main
    section {
    transform: rotateY(-30deg) rotateX(315deg);
}

/* -------------------- Camera angles bottom -------------------- */

input:nth-of-type(1):checked
    ~ input:nth-of-type(6):checked
    ~ main
    section {
    transform: rotateY(30deg) rotateX(45deg);
}

input:nth-of-type(2):checked
    ~ input:nth-of-type(6):checked
    ~ main
    section {
    transform: rotateY(30deg) rotateX(135deg);
}

input:nth-of-type(3):checked
    ~ input:nth-of-type(6):checked
    ~ main
    section {
    transform: rotateY(30deg) rotateX(225deg);
}

input:nth-of-type(4):checked
    ~ input:nth-of-type(6):checked
    ~ main
    section {
    transform: rotateY(30deg) rotateX(315deg);
}

/* -------------------- Psycho mode -------------------- */

input[name='switch-colors']:last-of-type:checked ~ main li {
    /* background-image: repeating-radial-gradient(
        closest-side circle,
        #fff calc(100% - var(--ring-size) * 3)
            calc(100% - var(--ring-size) * 2),
        #000 calc(100% - var(--ring-size) * 2)
            calc(100% - var(--ring-size)),
        var(--color) calc(100% - var(--ring-size)) 100%
    ); */
    background-image: repeating-radial-gradient(
        closest-side circle,
        #000 calc(100% - var(--ring-size) * 2)
            calc(100% - var(--ring-size)),
        var(--color) calc(100% - var(--ring-size)) 100%
    );
    /* --red: blue; */
    /* --yellow: #ffd500;
    --orange: #ff5800;
    --white: #fff;
    --blue: #0046ad;
    --green: #009b48;
    --black: #000; */
    --ring-size: 0.2rem;
    --eye-speed: 0.2s;
    animation: grow var(--eye-speed) linear infinite;
}

/* @keyframes grow {
    0% {
        background-size: 100% 100%;
    }
    100% {
        background-size: calc(100% + var(--ring-size) * 6)
            calc(100% + var(--ring-size) * 6);
    }
} */
@keyframes grow {
    0% {
        background-size: 100% 100%;
    }
    100% {
        background-size: calc(100% + var(--ring-size) * 4)
            calc(100% + var(--ring-size) * 4);
    }
}
